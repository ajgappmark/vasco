.TH "PIC.CONF" "5" "$Date$" "" ""
.SH "NAME"
pic.conf \- The configuration file for PIC microcontroller definitions
.SH "SYNOPSIS"
The
.I pic.conf
file is a configuration file for the Odyssey PIC programming tool. It contains
sections, each defining the programming parameters for a particular PIC
microcontroller device. The format of
.I pic.conf
is documented here for quick reference.
.SH "FILE FORMAT"
The file consists of sections and variables. A section begins with the name of
the section in square brackets and ends at the next section header. It is
the same format used by
.I odyssey.conf.
.PP 
In each section are a set of
.B variable=value
assignments. Each of these defines a specific parameter of the PIC. The
following is a listing of all the currently defined variable names and their
types. If a PIC doesn't support some feature, the variables do not need to be
defined for that feature.
.TP 
.BR memtype " (string)"
The type of memory in the PIC. This can have one of the values "eprom",
"flash", or "flashe". "eprom" can be used for any eprom/OTP device. "flash"
can be used for any type of electronically erasable device. "flashe" is
similar to "flash" but in the programming cycle, the END_PROG command is
required.
.TP 
.BR wordsize " (integer)"
The size of an instruction word in bits.
.TP 
.BR codesize " (integer)"
The number of words of program memory.
.TP 
.BR eesize " (integer)"
The number of bytes of data EEPROM. If the device doesn't have a data EEPROM,
this can be set to 0 or not specified at all.
.TP 
.BR progcount " (integer)"
The maximum number of times to attempt to program a memory location before
reporting an error. Defined in the programming spec.
.TP 
.BR progmult " (integer)"
The multiplier for the number of times to overprogram. Defined in the
programming spec.
.TP 
.BR progtime " (integer)"
The number of microseconds in each programming attempt for one memory
location. To be on the safe side, the maximum value from the datasheet
should be used for flash devices.
.TP 
.BR erasetime " (integer)"
The number of microseconds that a bulk erase takes.
.TP 
.BR configmask " (integer)"
A bitmask of all valid (non\-reserved) configuration bits.
.TP 
.BR configdefault " (integer)"
The default value of the configuration bits after an erase.
.TP 
.BR configsave " (integer)"
A bitmask of persistent bits in the configuration word. These bits will be
saved before and restored after a chip erase. They will also not be modifiable
when programming the device.
.TP 
.BR cp_mask " (integer)"
A bitmask of all the code protection bits.
.TP 
.BR cp_all " (integer)"
The value of the code protection bits when all program memory is code protected.
.TP 
.BR cp_none " (integer)"
The value of the code protection bits when no program memory is code protected.
.TP 
.BR cpd_mask " (integer)"
A bitmask of the bit(s) that enable data memory code protection.
.TP 
.BR cpd_on " (integer)"
The value of the cpd bit(s) when data code protection is enabled.
.TP 
.BR cpd_off " (integer)"
The value of the cpd bit(s) when data code protection is disabled.
.TP 
.BR bkbug_mask " (integer)"
A bitmask for the bit(s) which enable the on\-chip background debugger.
.TP 
.BR bkbug_on " (integer)"
The value of the bkbug bits when the debugger is enabled.
.TP 
.BR bkbug_off " (integer)"
The value of the bkbug bits when the debugger is disabled.
.SH "LICENSE"
.B odyssey
is distributed under the terms of the GNU General Public License version 2.
.SH "AUTHOR"
Mark Aikens <marka@desert.cx>
.SH "SEE ALSO"
.BR odyssey (1)
